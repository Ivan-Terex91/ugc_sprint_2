version: '3.5'

services:
  mongo:
    container_name: mongo
    image: mongo:4.4.6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db

  ugc:
    build:
      context: .
      dockerfile: Dockerfile-ugc
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    ports:
      - 7777:7777
    depends_on:
      - mongo

  auth:
    build:
      context: .
      dockerfile: Dockerfile-auth
    volumes:
      - ./auth:/auth
    env_file:
      - ./.env
    ports:
      - 8001:8001
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13-alpine
    env_file:
      ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  redis:
    image: redis
    volumes:
      - redis_data:/data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.2
    env_file:
      ./.env
    ports:
      - "5044:5044/udp"
    volumes:
      - ./deploy/etc/logstash/logstash.conf:/etc/logstash/logstash.conf:ro
    command: logstash -f /etc/logstash/logstash.conf

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    env_file:
      ./.env
    ports:
      - 9200:9200
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch


volumes:
  pg_data:
  redis_data:
  mongo_data: